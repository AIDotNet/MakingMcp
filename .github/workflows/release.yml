name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
    paths:
      - 'src/MakingMcp/MakingMcp.csproj'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: write
  actions: read

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET 10.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '10.0.x'

      - name: Restore dependencies
        run: dotnet restore src/MakingMcp/MakingMcp.csproj

      - name: Build Release
        run: dotnet build src/MakingMcp/MakingMcp.csproj --configuration Release --no-restore

      - name: Publish for Windows x64
        run: dotnet publish src/MakingMcp/MakingMcp.csproj --configuration Release --runtime win-x64 --self-contained true --output publish/win-x64

      - name: Publish for Linux x64
        run: dotnet publish src/MakingMcp/MakingMcp.csproj --configuration Release --runtime linux-x64 --self-contained true --output publish/linux-x64

      - name: Publish for macOS x64
        run: dotnet publish src/MakingMcp/MakingMcp.csproj --configuration Release --runtime osx-x64 --self-contained true --output publish/osx-x64

      - name: Restore Web dependencies
        run: dotnet restore src/MakingMcp.Web/MakingMcp.Web.csproj

      - name: Build Web Release
        run: dotnet build src/MakingMcp.Web/MakingMcp.Web.csproj --configuration Release --no-restore

      - name: Publish Web for Windows x64
        run: dotnet publish src/MakingMcp.Web/MakingMcp.Web.csproj --configuration Release --runtime win-x64 --self-contained true --output publish/web-win-x64

      - name: Publish Web for macOS x64
        run: dotnet publish src/MakingMcp.Web/MakingMcp.Web.csproj --configuration Release --runtime osx-x64 --self-contained true --output publish/web-osx-x64

      - name: Create Windows ZIP package
        run: |
          cd publish/win-x64
          Compress-Archive -Path * -DestinationPath "../../MakingMcp-win-x64.zip"
        shell: pwsh

      - name: Create Linux ZIP package
        run: |
          cd publish/linux-x64
          7z a "../../MakingMcp-linux-x64.zip" *
        shell: bash

      - name: Create macOS ZIP package
        run: |
          cd publish/osx-x64
          7z a "../../MakingMcp-osx-x64.zip" *
        shell: bash

      - name: Create Web Windows ZIP package
        run: |
          cd publish/web-win-x64
          Compress-Archive -Path * -DestinationPath "../../MakingMcp-Web-win-x64.zip"
        shell: pwsh

      - name: Create Web macOS ZIP package
        run: |
          cd publish/web-osx-x64
          7z a "../../MakingMcp-Web-osx-x64.zip" *
        shell: bash

      - name: Get tag name
        id: get_tag
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "TAG=${{ github.event.inputs.version }}" >> $GITHUB_ENV
            echo "IS_TAG=true" >> $GITHUB_ENV
            echo "IS_MANUAL=true" >> $GITHUB_ENV
          elif [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
            echo "IS_TAG=true" >> $GITHUB_ENV
            echo "IS_MANUAL=false" >> $GITHUB_ENV
          else
            echo "TAG=latest" >> $GITHUB_ENV
            echo "IS_TAG=false" >> $GITHUB_ENV
            echo "IS_MANUAL=false" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Create tag for manual release
        if: env.IS_MANUAL == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "${{ env.TAG }}" -m "Release ${{ env.TAG }}"
          git push origin "${{ env.TAG }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release with Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          files: |
            MakingMcp-win-x64.zip
            MakingMcp-linux-x64.zip
            MakingMcp-osx-x64.zip
            MakingMcp-Web-win-x64.zip
            MakingMcp-Web-osx-x64.zip
          prerelease: ${{ env.IS_TAG == 'false' }}
          make_latest: ${{ env.IS_TAG == 'false' }}
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
